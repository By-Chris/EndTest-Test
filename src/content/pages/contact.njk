---
title: Contact Me ðŸ“§
permalink: /contact/
---

<form name="contact" method="POST" data-netlify="true" action="/thank-you/">
    <p>
        <label>Your Name: <input type="text" name="nameFieldInput-name" id="nameFieldInput-ID" /></label>
    </p>

    <ol>
        <li>id="nameFieldInput-ID"</li>
        <li>name="nameFieldInput-name"</li>
    </ol>

    <p>
        <label>Your Email: <input type="email" name="email" required patter="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$"/></label>
    </p>
    <p>
        <label>Your Phone Number: <input type="tel" pattern="\d{3}\-\d{3}\-\d{4}" name="phone_number" id="phoneFieldInput-ID" name="phoneFieldInput-name" /></label>

    <ol>
        <li>id="phoneFieldInput-ID"</li>
        <li>name="phoneFieldInput-name"</li>
    </ol>

    <p>
        <label>Message: <textarea name="message"></textarea></label>
    </p>
    <p>
        <label>Date: <input type="date" name="date" /></label>
    </p>
    <p>
        <label>Option 1<input type="checkbox" name="checkOption1-name" id="checkOption1-ID" value="Option 1" /></label>
    </p>

    <ol>
        <li>id="checkOption1-ID"</li>
        <li>name="checkOption1-name"</li>
    </ol>

    <p>
        <label>Option 2<input type="checkbox" name="check2" value="Option 2" /></label>
    </p>

    <label for="dropdow">Select a option:</label>

    <select name="dropdown" id="dropdown1-ID" name="dropdown1-name">
        <option value="option1">Option1</option>
        <option value="option2">Option2</option>
        <option value="option3">Option3</option>
    </select>

    <ol>
        <li>id="dropdown1-ID"</li>
        <li>name="dropdown1-name"</li>
    </ol>
    <p>Note: The options must be chosen by text. Will need to be manually updated each time
        <p />

    <p>
        <button type="submit" name="contactSubmit-name" id="contactSubmit-ID">Send</button>
    </p>

    <ol>
        <li>id="contactSubmit-ID"</li>
        <li>name="contactSubmit-name"</li>
    </ol>
</form>

<script>
    var createAllErrors = function() {
        var form = $( this ),
            errorList = $( "ul.errorMessages", form );

        var showAllErrorMessages = function() {
            errorList.empty();

            // Find all invalid fields within the form.
            var invalidFields = form.find( ":invalid" ).each( function( index, node ) {

                // Find the field's corresponding label
                var label = $( "label[for=" + node.id + "] "),
                    // Opera incorrectly does not fill the validationMessage property.
                    message = node.validationMessage || 'Invalid value.';

                errorList
                    .show()
                    .append( "<li><span>" + label.html() + "</span> " + message + "</li>" );
            });
        };

        // Support Safari
        form.on( "submit", function( event ) {
            if ( this.checkValidity && !this.checkValidity() ) {
                $( this ).find( ":invalid" ).first().focus();
                event.preventDefault();
            }
        });

        $( "input[type=submit], button:not([type=button])", form )
            .on( "click", showAllErrorMessages);

        $( "input", form ).on( "keypress", function( event ) {
            var type = $( this ).attr( "type" );
            if ( /date|email|month|number|search|tel|text|time|url|week/.test ( type )
              && event.keyCode == 13 ) {
                showAllErrorMessages();
            }
        });
    };
    
    $( "form" ).each( createAllErrors );
</script>

<hr>

<p>
<p>
